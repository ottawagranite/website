# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-31 08:32
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.ASCIIUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('salutation', models.CharField(blank=True, choices=[(b'Mr.', b'Mr.'), (b'Ms.', b'Ms.'), (b'Mrs.', b'Mrs.'), (b'Dr.', b'Dr.'), (None, None)], max_length=100, verbose_name='salutation')),
                ('gender', models.CharField(blank=True, choices=[(b'Unspecified', b'Unspecified'), (b'Male', b'Male'), (b'Female', b'Female'), (b'Other', b'Other')], max_length=32, verbose_name='gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='date of birth')),
                ('comments', models.TextField(blank=True, default=b'', verbose_name='comments')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'member',
                'verbose_name_plural': 'members',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdditionalEmailAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'Home', b'Home'), (b'Work', b'Work'), (b'Other', b'Other')], help_text='The type of email address', max_length=200, verbose_name='type')),
                ('address', models.EmailField(help_text='The email address', max_length=200, verbose_name='address')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_email', to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'additional email address',
                'verbose_name_plural': 'additional email addresses',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'Home', b'Home'), (b'Work', b'Work'), (b'Other', b'Other')], help_text='The type of address', max_length=50, verbose_name='type')),
                ('street', models.CharField(max_length=200, verbose_name='street')),
                ('city', models.CharField(help_text='City or Town', max_length=200, verbose_name='city')),
                ('province', models.CharField(help_text='Province or State', max_length=200, verbose_name='province')),
                ('country', models.CharField(default=b'Canada', max_length=200, verbose_name='country')),
                ('postal_code', models.CharField(help_text='Format: A1A 1A1', max_length=7, verbose_name='postal code')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(verbose_name='name')),
                ('relationship', models.TextField(verbose_name='relationship')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contact', to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'emergency contact',
                'verbose_name_plural': 'emergency contacts',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContactPhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'Home', b'Home'), (b'Work', b'Work'), (b'Mobile', b'Mobile'), (b'Other', b'Other')], help_text='The type of phone number', max_length=50, verbose_name='type')),
                ('number', models.CharField(help_text='The phone number', max_length=200, verbose_name='number')),
                ('emergency_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_number', to='membership.EmergencyContact', verbose_name='emergency_contact')),
            ],
            options={
                'verbose_name': 'emergency phone number',
                'verbose_name_plural': 'emergency phone numbers',
            },
        ),
        migrations.CreateModel(
            name='Locker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'Half', b'Half'), (b'Full', b'Full')], max_length=200, verbose_name='type')),
                ('group', models.CharField(max_length=200, verbose_name='group')),
                ('number', models.CharField(max_length=200, verbose_name='number')),
                ('current_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'membership',
                'verbose_name_plural': 'memberships',
            },
        ),
        migrations.CreateModel(
            name='MembershipType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'verbose_name': 'membership type',
                'verbose_name_plural': 'membership types',
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(b'Home', b'Home'), (b'Work', b'Work'), (b'Mobile', b'Mobile'), (b'Other', b'Other')], help_text='The type of phone number', max_length=50, verbose_name='type')),
                ('number', models.CharField(help_text='The phone number', max_length=200, verbose_name='number')),
                ('publish', models.BooleanField(default=False, verbose_name='publish')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phone_number', to=settings.AUTH_USER_MODEL, verbose_name='member')),
            ],
            options={
                'verbose_name': 'phone number',
                'verbose_name_plural': 'phone numbers',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('start', models.DateField(verbose_name='start')),
                ('end', models.DateField(verbose_name='end')),
            ],
            options={
                'verbose_name': 'season',
                'verbose_name_plural': 'seasons',
            },
        ),
        migrations.AddField(
            model_name='membership',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.Season', verbose_name='season'),
        ),
        migrations.AddField(
            model_name='membership',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='membership.MembershipType', verbose_name='type'),
        ),
    ]
